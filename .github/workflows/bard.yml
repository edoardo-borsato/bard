# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

env:
  DOTNET_FRAMEWORK: "8.0"
on:
  [push, pull_request]
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: bard
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v4
  #       with:
  #         dotnet-version: ${{env.DOTNET_FRAMEWORK}}.x
  #     - name: Test
  #       run: dotnet test
  # build-release:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   defaults:
  #     run:
  #       working-directory: bard
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v4
  #       with:
  #         dotnet-version: ${{env.DOTNET_FRAMEWORK}}.x
  #     - name: Build
  #       run: dotnet build -c Release -f net${{env.DOTNET_FRAMEWORK}}
  #     - name: Upload artifacts
  #       if: github.ref == 'refs/heads/main'
  #       uses: actions/upload-artifact@v4 #this does not use working-directory!!!
  #       with:
  #         path: bard/bard/bin/Release/net${{env.DOTNET_FRAMEWORK}}
  #         name: build
  publish:
    # if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: bard
    strategy:
      matrix:
        runtime: [linux-x64, win-x64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{env.DOTNET_FRAMEWORK}}.x
      - name: Publish
        run: dotnet publish -c Release -f net${{env.DOTNET_FRAMEWORK}} -r ${{matrix.runtime}} -p:PublishSingleFile=true --self-contained true
      - name: Upload artifacts
        uses: actions/upload-artifact@v4 #this does not use working-directory!!!
        with:
          path: bard/bard/bin/Release/net${{env.DOTNET_FRAMEWORK}}/${{matrix.runtime}}/publish
          name: publish-${{matrix.runtime}}
  release:
    if: github.ref_type == 'tag' && github.event.base_ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4 #this does not use working-directory!!!
      - name: Create release
        id: create_release
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        uses: actions/create-release@v1
        with:
          tag_name: ${{github.ref}}
          release_name: ${{github.ref}}
          draft: false
          prerelease: false
      - name: Upload Release Assets
        id: upload-release-asset
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          zip -r publish-win-x64.zip publish-win-x64
          zip -r publish-linux-x64.zip publish-win-x64
          gh release upload 1.0 publish-win-x64.zip
          gh release upload 1.0 publish-linux-x64.zip
